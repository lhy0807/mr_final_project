<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]" />
  <arg name="slam_methods" default="gmapping" />
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua" />
  <arg name="open_rviz" default="true" />
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/odom" />
  <arg name="use_sim" default="false" />

  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>

  <!-- static tf publisher for laser scan data -->
  <node pkg="tf" type="static_transform_publisher" name="base_scan_transform" 
        args="0 0 0 0 0 0 1 base_link base_scan 100" />
  
  <!-- static tf publisher for base footprint -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_transform" 
        args="0 0 0 0 0 0 1 base_footprint base_link 100" />

  <!-- move_base -->
  <include file="$(find mr_final_project)/launch/move_base.launch" />

  <!-- slam -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>
  
  <!-- exploration -->
  <include file="$(find explore_lite)/launch/explore.launch" />

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find mr_final_project)/rviz/turtlebot3.rviz" />
  </group>

  <!-- using simulation -->
  <group if="$(arg use_sim)">
    <!-- goal generator node -->
    <node pkg="mr_final_project" type="goal_gen.py" name="goal_gen" required="true" output="screen" />

    <!-- tag tracker node -->
    <node pkg="mr_final_project" type="tag_tracker.py" name="tag_tracker" required="true" output="screen" />

    <!-- simulated gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>

    <!-- robot description including camera -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_mr)/urdf/turtlebot3_rpi_camera.urdf.xacro" />

    <!-- spawn robot with camera -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_rpi_camera -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- spawn apriltag -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_apriltag" args="-sdf -file $(find mr_final_project)/models/Apriltag36_11_00000/model.sdf -model apriltag_marker -x -.15 -y 0 -z .1 -R 1.57 -Y 1.57" />

    <!-- apriltag continuous detection -->
    <include file="$(find mr_final_project)/launch/apriltag_gazebo.launch" />

  </group>

</launch>