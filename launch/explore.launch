<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]" />
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua" />
  <arg name="open_rviz" default="true" />
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/odom" />
  <arg name="use_sim" default="false" />

  <!-- static tf publisher for laser scan data -->
  <node pkg="tf" type="static_transform_publisher" name="base_scan_transform" 
        args="0 0 0 0 0 0 base_footprint base_scan 100" />
  
  <!-- static tf publisher for base footprint -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_transform" 
        args="0 0 0 0 0 0 base_link base_footprint 100" />

  
  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)" />
    <remap from="odom" to="$(arg odom_topic)" />
  </node>

  <!-- GMAPPING -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch" >
    <arg name="open_rviz" value="false" />
    <arg name="model" value="$(arg model)" />
    <arg name="configuration_basename" value="$(arg configuration_basename)" />
  </include>

  <!-- EXPLORE -->
  <node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
    <param name="robot_base_frame" value="base_link" />
    <param name="costmap_topic" value="map" />
    <param name="costmap_updates_topic" value="map_updates" />
    <param name="visualize" value="true" />
    <param name="planner_frequency" value="0.33" />
    <param name="progress_timeout" value="30.0" />
    <param name="potential_scale" value="3.0" />
    <param name="orientation_scale" value="0.0" />
    <param name="gain_scale" value="1.0" />
    <param name="transform_tolerance" value="0.3" />
    <param name="min_frontier_size" value="0.75" />
  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find mr_final_project)/rviz/turtlebot3.rviz" />
  </group>

  <!-- using simulation -->
  <group if="$(arg use_sim)">
    <!-- load world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find mr_final_project)/worlds/crazy_maze.world" />
      <arg name="paused" value="false" />
      <arg name="use_sim_time" value="true" />
      <arg name="gui" value="true" />
      <arg name="headless" value="false" />
      <arg name="debug" value="false" />
    </include>

    <!-- spawn camera -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_rpi_camera -x 0.5 -y 8.0 -z 0.0 -param robot_description" />
    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node> -->

    <!-- generate Apriltag -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_apriltag" args="-sdf -file $(find mr_final_project)/models/Apriltag36_11_00000/model.sdf -model apriltag_marker -x 3.17 -y 3.96 -z 0.54 -R -1.57 " />
  </group>

</launch>